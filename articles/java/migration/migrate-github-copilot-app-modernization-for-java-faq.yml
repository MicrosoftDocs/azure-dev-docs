### YamlMime:FAQ
metadata:
  title: GitHub Copilot App Modernization for Java FAQ
  titleSuffix: Azure
  description: Answers frequently asked questions about GitHub Copilot App Modernization for Java.
  author: KarlErickson
  ms.author: karler
  ms.reviewer: xiading
  ms.topic: faq
  ms.date: 06/30/2025
  ms.custom: devx-track-java
  ms.service: azure-java

title: GitHub Copilot App Modernization for Java FAQ
summary: |
  Answers frequently asked questions about GitHub Copilot App Modernization for Java.

sections:
  - name: FAQ
    questions:
      - question: What's the product scope of the GitHub Copilot App Modernization for Java?
        answer: We recognize that the migration process is always complex and intertwined, with different layers of app ecosystems. At this time, we're limiting the migration scope to Java backend apps.

      - question: Can I use App Modernization for Java to upgrade my Java version?
        answer: There's a separate [GitHub Copilot App Modernization - upgrade for Java](/java/upgrade/overview) tool, and you can use it together with App Modernization for Java.

      - question: Are there any settings in GitHub Copilot that I should configure to make sure I get all the features?
        answer: |
          GitHub Copilot normally blocks certain code generations for files that commonly resemble public code, such as **pom.xml**. To prevent Copilot from blocking these changes, you must allow suggestions matching public code. For instructions, see [Enabling or disabling suggestions matching public code](https://docs.github.com/en/copilot/managing-copilot/managing-copilot-as-an-individual-subscriber/managing-your-copilot-plan/managing-copilot-policies-as-an-individual-subscriber#enabling-or-disabling-suggestions-matching-public-code).

          To manage the settings of Github Copilot in your organization, see [Enabling Copilot features in your organization](https://docs.github.com/en/copilot/how-tos/administer/organizations/managing-policies-for-copilot-in-your-organization#enabling-copilot-features-in-your-organization).

      - question: Will App Modernization for Java be open sourced in the future?
        answer: We currently have no plans to open source App Modernization for Java.

      - question: What GitHub Copilot license plan do I need to use App Modernization for Java?
        answer: App Modernization for Java is available to Pro, Pro+, Business, or Enterprise plan.

      - question: In addition to Java, I also need to migrate apps written in other languages. Is there a plan for App Modernization to go beyond Java or consolidate with the .NET experience?
        answer: Currently, App Modernization for Java is focused on assisting with Java applications. However, we're actively collecting requirements and feedback from customers regarding the need to support other languages and potentially consolidate with the .NET experience.

      - question: What are the token size limits of the top models?
        answer: For detailed model specifications, see the [GitHub Copilot documentation](https://docs.github.com/copilot).

      - question: Why don't I see tools in App Modernization for Java that use the Model Context Protocol (MCP) server?
        answer: |
         App Modernization for Java uses the MCP server to provide specialized migration functionalities. When you select **Refresh**, it establishes a connection with this server and updates the available tools in the chat agent. This action is only necessary in the following cases:
         - When you open a Java project for migration for the first time.
         - When you upgrade the extension to a newer version.

      - question: Why does App Modernization for Java stop after listing a plan without making any code changes?
        answer: Sometimes, App Modernization for Java requires explicit confirmation before proceeding. You can type **yes** or **continue** in the chat to enable the agent to move forward with the code modifications.

      - question: Why does App Modernization for Java frequently prompt me to select **Continue**?
        answer: To ensure safer operations, the GitHub Copilot agent repeatedly asks for user confirmation. As a workaround, you can select the dropdown arrow next to the **Continue** button and then select **Always allow**, or update your Visual Studio Code setting `chat.tools.autoApprove` to `true` to automatically approve all tools.

      - question: How can I view more details about the code changes made by the agent?
        answer: The agent always includes explanations for its code changes in the chat window. However, these details might be collapsed in the UI. You can expand the response in the chat to see the full rationale and step-by-step reasoning.

      - question: Why is the code regeneration process unstable?
        answer: App Modernization for Java is powered by AI, so occasional errors might occur. Always review the output carefully before use. You can also retry the regeneration process to see alternative code suggestions.

      - question: Where are formulas stored on the local machine and how can they be shared?
        answer: |
         Predefined formulas are in the following location: **%USERPROFILE%\.vscode\extensions\microsoft.migrate-java-to-azure-0.1.0\rag**

         Custom formulas are in the following location: **%USERPROFILE%\.azure\migrate-copilot\custom-rule**

      - question: How do I switch large language models (LLMs)?
        answer: |
         App Modernization for Java currently supports the following three models:

         - `gpt-4o`
         - `claude-3.5-sonnet`
         - `gemini-2.0-flash`

         To switch models, use the following steps:

         1. Press <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>.
         1. Select **Preferences: Open Settings (UI)**.
         1. Search for **migrate.java**.
         1. Adjust the **Migrate Java: Model Family** setting.

      - question: Does the tool store my source code?
        answer: |
         No. The tool uses GitHub Copilot in the same way you use it to modify code, which doesn't retain code snippets beyond the immediate session. We don't collect, transmit, or store your custom formulas either.

         Telemetry metrics are collected and analyzed to track feature usage and effectiveness.

         For more information, see the [Microsoft Privacy Statement](https://privacy.microsoft.com).
